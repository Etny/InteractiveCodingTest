
[
    {
        "name": "Deel A",
        "file_name": "DeelA",
        "type_name": "OpdrachtA",
        "description": "In dit onderdeel testen we je basisvaardigheden C#.",
        "tests": [
            {
                "name": "Opgave 1",
                "method": "Opgave1",
                "rules": [
                    {
                        "type": "node_occurences",
                        "content": "number",
                        "kind": "VariableDeclaration"
                    },
                    {
                        "type": "or",
                        "rule1": {
                            "type": "node_occurences",
                            "kind": "IdentifierName",
                            "content": "var"
                        },
                        "rule2": {
                            "type": "node_occurences",
                            "kind": "PredefinedType",
                            "content": "int"
                        }
                        
                    },
                    {
                        "type": "node_occurences",
                        "content": "50",
                        "kind": "NumericLiteralExpression"
                    }
                ]
            },
            {
                "name": "Opgave 2",
                "method": "Opgave2",
                "rules": [
                    {
                        "type": "validate_method",
                        "truth_table": [
                            {
                                "in": [362, 7892],
                                "out": 2856904
                            },
                            {
                                "in": [-234, 938],
                                "out": -219492
                            }
                        ]
                    }
                ] 
            },
            {
                "name": "Opgave 3",
                "method": "Opgave3",
                "rules": [
                    {
                        "type": "validate_method",
                        "truth_table": [
                            {
                                "in": [7],
                                "out": "Goedemorgen"
                            },
                            {
                                "in": [17],
                                "out": "Goedemiddag"
                            },
                            {
                                "in": [12],
                                "out": "Goedemiddag"
                            }
                        ]
                    }
                ] 
            },
            {
                "name": "Opgave 4",
                "method":"Opgave4",
                "rules": [
                    {
                        "type": "validate_console",
                        "lines": ["1", "2", "3", "4", "5"]
                    },
                    {
                        "type": "node_occurences",
                        "content": ".Write",
                        "kind": "InvocationExpression",
                        "count": 2,
                        "restriction": "Less"
                    },
                    {
                        "type": "node_occurences",
                        "kind": "StringLiteralExpression",
                        "count": 0
                    }
                ]
            },
            {
                "name": "Opgave 5",
                "method": "Opgave5",
                "rules": [
                    {
                        "type": "validate_method",
                        "truth_table": [
                            {
                                "in": [],
                                "out": ["aardbeien", "peren", "appels"]
                            }
                        ]
                    }
                ] 
            },
            {
                "name": "Opgave 6",
                "method": "Opgave6",
                "rules": [
                    {
                        "type": "validate_custom_type",
                        "type_name": "Car",
                        "members": [
                            {
                                "name": "Brand",
                                "value": "Peugeot"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "name": "Deel B",
        "file_name": "DeelB",
        "type_name": "BirdCounter",
        "description": "In dit onderdeel testen we je kennis van classes en wat complexere syntax.",
        "tests": [
            {
                "name": "Koekjes Methode",
                "method": "DemandCookie",
                "type_override": "OpdrachtB",
                "rules": [
                    {
                        "type": "validate_console",
                        "in": ["doos", "error", "koekje"],
                        "lines": [
                            "Geef me een koekje! Ik wil een koekje!", 
                            "Ik wil geen doos! Ik wil een koekje!", 
                            "Ik wil geen error! Ik wil een koekje!", 
                            "Dank je! Mjam mjam mjam"
                        ]
                    }
                ]
            },
            {
                "name": "ToyCar.Buy",
                "type_override": "ToyCar",
                "method": "Buy",
                "rules": [
                    {
                        "type": "validate_custom_type",
                        "type_name": "ToyCar",
                        "members": [
                            {
                                "name": "Charge",
                                "value": 100
                            },
                            {
                                "name": "DistanceDriven",
                                "value": 0
                            }
                        ]
                    }
                ]
            },
            {
                "name": "ToyCay.Report",
                "type_override": "ToyCar",
                "method": "Report",
                "rules": [
                    {
                        "type": "validate_console",
                        "with_props": [
                            {
                                "name": "Charge",
                                "value": 54
                            },
                            {
                                "name": "DistanceDriven",
                                "value": 1234567
                            }
                        ],
                        "lines": ["De auto heeft 1234567 meter gereden, en is voor 54% geladen"]
                    },
                    {
                        "type": "validate_console",
                        "with_props": [
                            {
                                "name": "Charge",
                                "value": 14
                            },
                            {
                                "name": "DistanceDriven",
                                "value": 3
                            }
                        ],
                        "lines": ["De auto heeft 3 meter gereden, en is voor 14% geladen"]
                    }
                ]
            },
            {
                "name": "ToyCar.Drive",
                "method": "Drive",
                "type_override": "ToyCar",
                "rules": [
                    {
                        "type": "validate_custom_type",
                        "type_name": "ToyCar",
                        "members": [
                            {
                                "name": "Charge",
                                "value": 45
                            },
                            {
                                "name": "DistanceDriven",
                                "value": 23
                            }
                        ],
                        "with_props": [
                            {
                                "name": "Charge",
                                "value": 50
                            },
                            {
                                "name": "DistanceDriven",
                                "value": 3
                            }
                        ]
                    },
                    {
                        "type": "validate_custom_type",
                        "type_name": "ToyCar",
                        "members": [
                            {
                                "name": "Charge",
                                "value": 2
                            },
                            {
                                "name": "DistanceDriven",
                                "value": 14
                            }
                        ],
                        "with_props": [
                            {
                                "name": "Charge",
                                "value": 2
                            },
                            {
                                "name": "DistanceDriven",
                                "value": 14
                            }
                        ]
                    }
                ]
            },
            {
                "name": "BirdCounter.GetCountOnDay",
                "method": "GetCountOnDay",
                "rules": [
                    {
                        "type": "validate_method",
                        "with_props": [
                            {
                                "name": "Sightings",
                                "value": [1, 2, 3, 4, 5]
                            }
                        ],
                        "in": [0],
                        "out": 1
                    },
                    {
                        "type": "validate_method",
                        "with_props": [
                            {
                                "name": "Sightings",
                                "value": [0, 0, 2345, 0]
                            }
                        ],
                        "in": [2],
                        "out": 2345
                    }
                ]
            },
            {
                "name": "BirdCounter.GetTotalDays",
                "method": "GetTotalDays",
                "rules": [
                    {
                        "type": "validate_method",
                        "with_props": [
                            {
                                "name": "Sightings",
                                "value": [1, 2, 3, 4, 5]
                            }
                        ],
                        "in": [],
                        "out": 5
                    },
                    {
                        "type": "validate_method",
                        "with_props": [
                            {
                                "name": "Sightings",
                                "value": []
                            }
                        ],
                        "in": [],
                        "out": 0
                    }
                ]
            },
            {
                "name": "BirdCounter.GetCountYesterday",
                "method": "GetCountYesterday",
                "rules": [
                    {
                        "type": "validate_method",
                        "with_props": [
                            {
                                "name": "Sightings",
                                "value": [1, 2, 3, 4, 5]
                            }
                        ],
                        "in": [],
                        "out": 5
                    },
                    {
                        "type": "validate_method",
                        "with_props": [
                            {
                                "name": "Sightings",
                                "value": [2000, 9999, 0]
                            }
                        ],
                        "in": [],
                        "out": 0
                    }
                ]
            },
            {
                "name": "BirdCounter.MostSuccessfulDay",
                "method": "MostSuccessfulDay",
                "rules": [
                    {
                        "type": "validate_method",
                        "with_props": [
                            {
                                "name": "Sightings",
                                "value": [1, 2, 3, 4, 5]
                            }
                        ],
                        "in": [],
                        "out": {
                            "Item1": 4,
                            "Item2": 5
                        }
                    },
                    {
                        "type": "validate_method",
                        "with_props": [
                            {
                                "name": "Sightings",
                                "value": [2000, 9999, 0]
                            }
                        ],
                        "in": [],
                        "out": {
                            "Item1": 1,
                            "Item2": 9999
                        }
                    }
                ]
            },
            {
                "name": "BirdCounter.TotalSightings",
                "method": "TotalSightings",
                "rules": [
                    {
                        "type": "validate_method",
                        "with_props": [
                            {
                                "name": "Sightings",
                                "value": [1, 2, 3, 4, 5]
                            }
                        ],
                        "in": [],
                        "out": 15 
                    },
                    {
                        "type": "validate_method",
                        "with_props": [
                            {
                                "name": "Sightings",
                                "value": [2000, 7999, 0]
                            }
                        ],
                        "in": [],
                        "out": 9999
                    }
                ]
            },
            {
                "name": "BirdCounter.CountBusyDays",
                "method": "CountBusyDays",
                "rules": [
                    {
                        "type": "validate_method",
                        "with_props": [
                            {
                                "name": "Sightings",
                                "value": [8, 2, 17, 4, 5]
                            }
                        ],
                        "in": [],
                        "out": 3 
                    },
                    {
                        "type": "validate_method",
                        "with_props": [
                            {
                                "name": "Sightings",
                                "value": [2000, 7999, 0]
                            }
                        ],
                        "in": [],
                        "out": 2
                    }
                ]
            }
        ]
    },
    {
        "name": "Deel C",
        "file_name": "DeelC",
        "type_name": "TuringOpdracht",
        "description": "In dit onderdeel testen we complexe logica. \n Dit is een lastig onderdeel, dus schrik niet als het niet lukt!",
        "tests": [
            {
                "name": "Turing Opdracht",
                "method": "Get5CodeTimesNumSteps",
                "rules": [
                    {
                        "type": "validate_method",
                        "in": [[2, 209, 133, 92, 2, 339, 364, 132, 1, 94, 5, 217, 2, 290, 291, 124, 1, 41, 393, 266, 1, 344, 112, 345, 1, 116, 29, 237, 2, 331, 163, 224, 1, 93, 34, 325, 1, 280, 215, 149, 2, 372, 53, 208, 2, 349, 321, 172, 1, 216, 156, 213, 1, 20, 197, 247, 2, 104, 30, 340, 1, 155, 148, 130, 2, 95, 24, 152, 2, 85, 122, 284, 2, 274, 376, 336, 1, 133, 352, 322, 2, 142, 138, 72, 2, 82, 229, 120, 2, 97, 327, 232, 1, 184, 150, 150, 2, 338, 65, 340, 2, 279, 353, 296, 1, 2, 68, 151, 1, 213, 237, 29, 2, 218, 38, 388, 1, 130, 163, 325, 1, 326, 241, 11, 2, 15, 279, 288, 2, 338, 229, 60, 1, 52, 339, 90, 2, 140, 125, 104, 2, 100, 41, 160, 1, 24, 121, 374, 1, 186, 177, 395, 1, 47, 57, 269, 1, 320, 278, 265, 2, 266, 341, 368, 1, 91, 397, 63, 2, 61, 221, 96, 1, 388, 235, 113, 2, 240, 26, 256, 1, 25, 95, 353, 1, 9, 150, 57, 2, 118, 107, 80, 1, 365, 40, 253, 1, 177, 119, 333, 1, 354, 192, 17, 2, 9, 37, 216, 1, 32, 300, 69, 2, 321, 256, 64, 2, 150, 279, 320, 0, 236, 253, 201, 2, 264, 286, 120, 1, 398, 248, 123, 2, 342, 336, 120, 1, 15, 368, 155, 2, 270, 366, 80, 1, 241, 71, 178, 1, 167, 211, 289, 2, 36, 135, 288, 1, 156, 329, 273, 1, 44, 101, 235, 1, 106, 27, 366, 1, 163, 70, 90, 1, 261, 59, 377, 1, 142, 275, 305, 1, 49, 123, 393, 1, 215, 265, 187, 2, 136, 280, 248, 2, 377, 20, 108, 1, 274, 3, 5, 1, 286, 189, 397, 2, 82, 162, 28, 2, 219, 175, 164, 2, 54, 274, 120, 2, 180, 72, 28, 2, 57, 1, 0, 2, 101, 206, 384, 1, 89, 21, 397, 2, 21, 329, 260, 2, 384, 396, 380, 1, 369, 271, 373, 2, 190, 97, 236, 1, 228, 294, 201, 2, 320, 302, 332, 2, 49, 27, 200, 2, 12, 17, 280, 2, 332, 282, 52, 1, 248, 59, 269, 2, 334, 282, 100, 1, 59, 38, 285, 1, 320, 65, 117, 2, 235, 11, 128, 1, 154, 305, 301, 2, 96, 245, 204, 2, 248, 27, 332]],
                        "out": 289920
                    }
                ]
            }
        ]    
    }
    
]

        